---
  - name: Install additional OS packages
    become: yes
    yum:
        name: "{{ item }}"
        state: present
    with_items:
        - curl
        - php-posix
        - php-xml


  - name: Install Composer
    become: yes
    shell: "curl -sS https://getcomposer.org/installer | php"
    args:
        creates: "/usr/local/bin/composer"

  - name: Move Composer into globally-accessible location
    become: yes
    shell: "mv composer.phar /usr/local/bin/composer"
    args:
        creates: "/usr/local/bin/composer"

  - name: Clone Drush from GitHub
    git:
        repo: "https://github.com/drush-ops/drush.git"
        dest: "/usr/local/share/drush"
        version: "6.x"

  - name: Install Drush dependencies with Composer
    become: yes
    shell: "/usr/local/bin/composer install --prefer-source --no-interaction"
    args:
        chdir: "/usr/local/share/drush"
        creates: "/usr/local/share/drush/vendor/autoload.php"

  - name: Create drush symlink
    file:
        src: "/usr/local/share/drush/drush"
        dest: "/usr/bin/drush"
        state: link

  - name: Run drush to finish setting it up
    become: yes
    command: "drush"
    register: drush_result
    changed_when: "'Execute a drush command' not in drush_result.stdout"

  - name: Clone DSLM from drupal.org
    git:
        repo: "http://git.drupal.org/project/dslm.git"
        dest: "/usr/local/share/drush/commands/dslm"
        version: "manage-package"

  - name: Add DSLM_BASE variable to .profile
    lineinfile:
        dest: "/home/osr_web_deploy/.profile"
        line: "export DSLM_BASE=/data/atlas/code"
        regexp: "^export DSLM_BASE=/data/atlas/code"
        state: present
        insertafter: EOF
        create: True

  - name: Add PACKAGES_BASE variable to .profile
    lineinfile:
        dest: "/home/osr_web_deploy/.profile"
        line: "export PACKAGES_BASE=/data/atlas/code"
        regexp: "^export PACKAGES_BASE=/data/atlas/code"
        state: present
        insertafter: EOF
        create: True

  - name: Create ~/.drush
    file:
        path: "/home/osr_web_deploy/.drush"
        state: directory
        owner: osr_web_deploy

  - name: Create composer file for Patchfile and CodeSniffer
    become: yes
    become_user: osr_web_deploy
    template:
        src: "drush.composer.json.j2"
        dest: "/home/osr_web_deploy/composer.json"
        force: yes

  - name: Remove existing lock file
    become: yes
    file:
        path: "/home/osr_web_deploy/composer.lock"
        state: absent

  - name: Install packages via composer
    become: yes
    shell: "/usr/local/bin/composer install --no-interaction"
    args:
        chdir: "/home/osr_web_deploy"

  - name: Copy drushrc.php to VM to osr_web_deploy
    template:
      src: "drushrc.php.j2"
      dest: "/home/osr_web_deploy/.drush/drushrc.php"
      owner: osr_web_deploy
      force: yes

  - name: Install registry_rebuild
    become: yes
    become_user: osr_web_deploy
    command: "drush dl registry_rebuild -y"

  - name: Link phpcs command
    file:
        dest: "/usr/bin/phpcs"
        src: "/home/osr_web_deploy/bin/phpcs"
        state: link

  - name: Add Drupal coding standards to PHP CodeSniffer
    become: yes
    command: "phpcs --config-set installed_paths /home/osr_web_deploy/modules/coder/coder_sniffer"

  - name: Set owner to osr_web_deploy
    file:
        path: "/home/osr_web_deploy/.drush"
        owner: osr_web_deploy
        group: osr_web_deploy
        state: directory
        recurse: yes
