---
  # Also includes some packages to compile the additional version of python.
  - name: Installs necessary OS packages
    become: yes
    yum: pkg={{ item }} state=latest
    with_items:
      - "@development"
      - gcc
      - gcc-c++
      - libffi-devel-3.0.5
      - openssl-1.0.1e
      - openssl-devel-1.0.1e
      - openldap-devel
      - cyrus-sasl-lib-2.1.23
      - mongodb-2.4.14
      - mongodb-server-2.4.14
      - python-pip
      - python-setuptools-0.6.10
      - zlib-devel-1.2.3

  - name: Download Python 2.7
    get_url:
      dest: /home/vagrant
      url: http://www.python.org/ftp/python/2.7.1/Python-2.7.1.tgz
    become: yes

  - name: Extract Python 2.7
    shell: tar xzf ./Python-2.7.1.tgz -C /opt
    become: yes
    args:
      chdir: /home/vagrant
      creates: /opt/Python-2.7.1

  - name: Configure Python 2.7
    shell: ./configure --prefix=/usr/local --enable-shared
    become: yes
    args:
      chdir: /opt/Python-2.7.1

  - name: Make Python 2.7
    shell: make
    become: yes
    args:
      chdir: /opt/Python-2.7.1

  - name: Install Python 2.7
    shell: make altinstall
    become: yes
    args:
      chdir: /opt/Python-2.7.1 # Need to add a 'creates=' flag here

  - name: Install Python packages to allow virtual environments
    shell: pip install virtualenv
    become: yes
    args:
      chdir: /opt/Python-2.7.1

  - name: Add location of LD_LIBRARY_PATH
    become: yes
    copy:
      src: "python2.7.conf"
      dest: "/etc/ld.so.conf.d/"

  - name: Run ldconfig
    become: yes
    shell: ldconfig

    # Setup a Python 2.7 virtual environment to run the inventory
  - name: Setup a virtualenv for the Inventory using Python 2.7
    shell: virtualenv -p /usr/local/bin/python2.7 /home/dplagnt/inventory-python27-environment
    args:
      chdir: /opt/Python-2.7.1
      creates:  /home/dplagnt/inventory-python27-environment/bin/python2.7

  # Setup a Python 2.7 virtual environment to run Atlas
  - name: Setup a virtualenv for Atlas using Python 2.7
    shell: virtualenv -p /usr/local/bin/python2.7 /home/dplagnt/atlas-python27-environment
    args:
      chdir: /opt/Python-2.7.1
      creates:  /home/dplagnt/inventory-python27-environment/bin/python2.7

  - name: Install Python packages in the Python 2.7 environment
    pip:
      name: "{{ item.name }}"
      version: "{{ item.version }}"
      virtualenv: "/home/dplagnt/atlas-python27-environment"
    with_items:
      - { name: 'ecdsa', version: '0.10'} # We need this because paramiko doesn't resolve it's dependancies
      - { name: 'importlib', version: '1.0.3'}
      - { name: 'cryptography', version: '0.8.2' }
      - { name: 'pycrypto', version: '2.6.1' }
      - { name: 'requests', version: '2.7.0' }
      - { name: 'flask', version: '0.10.1' }
      - { name: 'jinja2', version: '2.7.3' }
      - { name: 'fabric', version: '1.8.0' }
      - { name: 'pymongo', version: '2.8.1' }
      - { name: 'cerberus', version: '0.9.1' }
      - { name: 'python-logstash', version: '0.4.5' }
      - { name: 'events', version: '0.2.1' }
      - { name: 'pyopenssl', version: '0.15.1' }
      - { name: 'paramiko', version: '1.12.0'}
      - { name: 'python-ldap', version: '2.3.13' }
      - { name: 'eve', version: '0.5.3' }
      - { name: 'celery', version: '3.1.12' }

  - name: Install Python packages in the Atlas virtualenv
    pip:
      name: "{{ item.name }}"
      version: "{{ item.version }}"
      virtualenv: "/home/dplagnt/atlas-python27-environment"
    with_items:
      - { name: 'ecdsa', version: '0.10'} # We need this because paramiko doesn't resolve it's dependancies
      - { name: 'importlib', version: '1.0.3'}
      - { name: 'cryptography', version: '0.8.2' }
      - { name: 'pycrypto', version: '2.6.1' }
      - { name: 'requests', version: '2.7.0' }
      - { name: 'flask', version: '0.10.1' }
      - { name: 'jinja2', version: '2.7.3' }
      - { name: 'fabric', version: '1.8.0' }
      - { name: 'pymongo', version: '2.8.1' }
      - { name: 'cerberus', version: '0.9.1' }
      - { name: 'python-logstash', version: '0.4.5' }
      - { name: 'events', version: '0.2.1' }
      - { name: 'pyopenssl', version: '0.15.1' }
      - { name: 'paramiko', version: '1.12.0'}
      - { name: 'python-ldap', version: '2.3.13' }
      - { name: 'eve', version: '0.5.3' }
      - { name: 'celery', version: '3.1.12' }

  - name: Install Cerberus second since eve is dependant on a lower version
    pip:
      name: "{{ item.name }}"
      version: "{{ item.version }}"
      virtualenv: "/home/dplagnt/atlas-python27-environment"
    with_items:
      - { name: 'cerberus', version: '0.9.1' }

  - name: Get mod_wsgi
    get_url:
      url: https://github.com/GrahamDumpleton/mod_wsgi/archive/3.5.tar.gz
      dest: /opt
      mode: 0440

  - name: Unpack mod_wsgi
    unarchive:
      src: /opt/mod_wsgi-3.5.tar.gz
      dest: /opt
      copy: no

  - name: Install mod_wsgi for Python 2.7
    become: yes
    shell: ./configure --with-apxs=/opt/rh/httpd24/root/usr/bin/apxs --with-python=/home/dplagnt/atlas-python27-environment/bin/python2.7
    args:
      chdir: /opt/mod_wsgi-3.5

  - name: Make mod_wsgi
    become: yes
    shell: make
    args:
      chdir: /opt/mod_wsgi-3.5

  - name: Link mod_wsgi in
    become: yes
    shell: "cp /opt/mod_wsgi-3.5/.libs/mod_wsgi.so /opt/rh/httpd24/root/usr/lib64/httpd/modules/mod_wsgi.so"

  - name: Configure Apache 2.4 to use mod_wsgi
    lineinfile:
      dest: "/opt/rh/httpd24/root/etc/httpd/conf/httpd.conf"
      regexp: "^LoadModule wsgi_module modules/mod_wsgi.so"
      line: "LoadModule wsgi_module modules/mod_wsgi.so"
      state: present
    notify:
      - restart httpd24-httpd

  - name:  Add vhost configuration
    template:
      src: "vhosts.conf.j2"
      dest: "/opt/rh/httpd24/root/etc/httpd/conf.d/vhosts.conf"
      mode: 0650
      owner: apache
      group: apache
    notify:
      - restart httpd24-httpd

  # Celery and CeleryBeat
  - name: Push celeryd init script
    copy:
        src: "celeryd"
        dest: "/etc/init.d/"
        owner: root
        group: root
        mode: 0777

  - name: Push celerybeat init script
    copy:
        src: "celerybeat"
        dest: "/etc/init.d/"
        mode: 0777

  - name: Pushes celeryd configuration
    template:
        src: "celeryd.j2"
        dest: "/etc/default/celeryd"
        owner: root
        group: root
        mode: 0640
        force: yes

  - name: Create celery group
    group:
        name: celery
        state: present

  - name: Create celery user
    user:
        name: "celery"
        group: "celery"

  - name: Update user vagrant groups
    user:
        name: "vagrant"
        groups: "celery"
        append: yes

  - name: Ensure Celery is started and enabled on boot.
    service:
        name: celeryd
        state: started
        enabled: yes

  - name: Ensure CeleryBeat is started and enabled on boot.
    service:
        name: celerybeat
        state: started
        enabled: yes

  # Eve
  - name: Copy Eve local configuration for Inventory
    become: yes
    template: src=local_settings_inventory.py.j2 dest=/data/code/inventory/local_settings.py mode=0664
    notify:
      - restart celeryd
      - restart celerybeat

  - name: Copy Eve local configuration for Atlas
    become: yes
    template: src=local_settings_atlas.py.j2 dest=/data/code/atlas/local_settings.py mode=0664
    notify:
      - restart celeryd
      - restart celerybeat

  - name:  Add lines for the python virtualenv to atlas.wsgi
    lineinfile:
      dest: "/data/code/atlas/atlas.wsgi"
      line: "activate_this = '/home/dplagnt/atlas-python27-environment/bin/activate_this.py'"
      regexp: "^activate_this = '/home/dplagnt/atlas-python27-environment/bin/activate_this.py'"
      state: present
      insertbefore: BOF
    notify:
      - restart celeryd
      - restart celerybeat

  - name:  Add lines for the python virtualenv to atlas.wsgi
    lineinfile:
      dest: "/data/code/atlas/atlas.wsgi"
      line: "activate_this = '/home/dplagnt/atlas-python27-environment/bin/activate_this.py'"
      regexp: "^activate_this = '/home/dplagnt/atlas-python27-environment/bin/activate_this.py'"
      state: present
      insertbefore: BOF
    notify:
      - restart celeryd
      - restart celerybeat

  - name:  Add lines for the python virtualenv to inventory.wsgi
    lineinfile:
      dest: "/data/code/atlas/atlas.wsgi"
      line: "execfile(activate_this, dict(__file__=activate_this))"
      regexp: "^execfile(activate_this\\, dict(__file__\\=activate_this))"
      state: present
      insertafter: "^activate_this = '/home/dplagnt/atlas-python27-environment/bin/activate_this.py'"
    notify:
      - restart celeryd
      - restart celerybeat

  - name:  Add lines for the python virtualenv to atlas.wsgi
    lineinfile:
      dest: "/data/code/atlas/atlas.wsgi"
      line: "execfile(activate_this, dict(__file__=activate_this))"
      regexp: "^execfile(activate_this\\, dict(__file__\\=activate_this))"
      state: present
      insertafter: "^activate_this = '/home/dplagnt/atlas-python27-environment/bin/activate_this.py'"
    notify:
      - restart celeryd
      - restart celerybeat

  # MongoDB
  - name: Copy MongoDB configuration
    template:
        src: "mongodb.conf.j2"
        dest: "/etc/mongodb.conf"
        mode: 0644
        owner: root
        group: root

  - name: Create the mongodb startup file
    template:
        src: "mongod.j2"
        dest: "/etc/init.d/mongod"
        mode: 0655

  - name: Create mongod group
    group:
        name: mongodb
        state: present

  - name: Create mongod user
    user:
        name: "mongodb"
        group: "mongodb"

  - name: Create data directory for mongodb
    file:
        path: "/data_local/mongodb"
        state: directory
        owner: mongodb
        group: mongodb

  - name: Create logging directory for mongodb
    file:
        path: "/var/log/mongodb"
        state: directory
        owner: mongodb
        group: mongodb

  - name: Create run directory for mongodb
    file:
        path: "/var/run/mongodb"
        state: directory
        owner: mongodb
        group: mongodb

  - name: Ensure MongoDB is started and enabled on boot.
    service:
        name: mongod
        state: started
        enabled: yes
    notify:
      - restart celeryd
      - restart celerybeat
